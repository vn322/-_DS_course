
--=============== МОДУЛЬ 5. РАБОТА С POSTGRESQL =======================================


--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Сделайте запрос к таблице payment и с помощью оконных функций добавьте вычисляемые колонки согласно условиям:
--Пронумеруйте все платежи от 1 до N по дате
--Пронумеруйте платежи для каждого покупателя, сортировка платежей должна быть по дате
--Посчитайте нарастающим итогом сумму всех платежей для каждого покупателя, сортировка должна 
--быть сперва по дате платежа, а затем по сумме платежа от наименьшей к большей
--Пронумеруйте платежи для каждого покупателя по стоимости платежа от наибольших к меньшим 
--так, чтобы платежи с одинаковым значением имели одинаковое значение номера.
--Можно составить на каждый пункт отдельный SQL-запрос, а можно объединить все колонки в одном запросе.

select  payment_id,
row_number() over(partition by payment_date) as "платежи по дате",
row_number() over(partition by customer_id order by payment_date desc) as "платежи покупателя",
sum(amount) over(partition by customer_id order by payment_date, amount) as "итог покупателя",
row_number() over(partition by customer_id order by amount desc) as "стоимости платежа"
from payment p 



--ЗАДАНИЕ №2
--С помощью оконной функции выведите для каждого покупателя стоимость платежа и стоимость 
--платежа из предыдущей строки со значением по умолчанию 0.0 с сортировкой по дате.


select customer_id, payment_id, payment_date, amount,
 	lag(p.amount,1,0.) over (partition by customer_id order by p.payment_date)
 from payment p
 order by customer_id

--ЗАДАНИЕ №3
--С помощью оконной функции определите, на сколько каждый следующий платеж покупателя больше или меньше текущего.

select customer_id, payment_id, payment_date, amount,
	amount - lead(p.amount,1,0.) over (partition by customer_id  order by p.payment_date, customer_id) as difference
from payment p


--ЗАДАНИЕ №4
--С помощью оконной функции для каждого покупателя выведите данные о его последней оплате аренды.


select customer_id, payment_id, payment_date, last_value
from(
	select customer_id, payment_id, payment_date,
		last_value(amount) over (partition by customer_id order by payment_date desc),
		row_number() over (partition by customer_id order by payment_date desc) 
	from payment) p 
where row_number = 1



Здравствуйте, Алексей!

Спасибо за выполненную работу. Отлично научились работать с оконными функциями и считать нарастающий итог, а также получать значения следующей и предыдущей строки.

Что нужно доработать:

В заданиях 2 и 3 нужно выбирать значения стоимости платежа из предыдущей или следующей строки, поэтому применять функцию SUM лишнее.
В задании 2, нужно было указать значение по умолчанию. Для функции LAG, можно указать его внутри самой функции третьим аргументом:
LAG(amount, 1, 0.00)

В задании 4 нужно доработать запрос, чтобы для каждого покупателя был выведен только его последний платеж и данные о нём: id платежа, дата и сумма платежа, покупатель (один покупатель = одна строка). Задание нужно решить с помощью оконной функции. Как вариант решения через ROW_NUMBER() + CTE или подзапрос. Можно пронумеровать все оплаты от 1 до N по покупателю начиная с самой последней оплаты и потом выбрать только те строки, у которых оконная функция вернула значение = 1.
Доработайте ответы на задания согласно рекомендациям и отправляйте повторно на проверку.

С уважением, Екатерина

Здравствуйте, Алексей!

Задания 2 и 3 доработаны верно. В задании 4 выводятся все платежи, а должен быть только последний платеж для покупателя (один покупатель = одна строка).

Воспользуйтесь оконной функцией ROW_NUMBER() и пронумеруйте все платежи от 1 до N по покупателю начиная с самой последней оплаты, чтобы последняя по дате оплата была наверху выборки. Поместите запрос с оконной функцией в подзапрос и потом выберите только те строки, у которых оконная функция вернула значение = 1.

Вносите правки и отправляйте повторно на проверку.

С уважением, Екатерина

Здравствуйте, Алексей!

Отлично справились с доработкой ответов, все запросы составили верно, замечаний нет.

Домашнее задание зачтено.

Желаю успехов в изучении следующих тем курса!

С уважением, Екатерина